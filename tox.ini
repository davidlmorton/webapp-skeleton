[tox]
minversion = 2.0
envlist = py36

[testenv]
# usedevelop is needed to ensure coverage is calculated properly
usedevelop = True
passenv = *
setenv =
    WEBAPP_BASE_URL={env:WEBAPP_BASE_URL:http://localhost:5200}
    WEBAPP_CELERY_BROKER_URL={env:WEBAPP_CELERY_BROKER_URL}
    WEBAPP_CELERY_RESULT_BACKEND={env:WEBAPP_CELERY_RESULT_BACKEND}
    WEBAPP_HOST={env:WEBAPP_HOST:0.0.0.0}
    WEBAPP_LOG_LEVEL={env:WEBAPP_LOG_LEVEL:DEBUG}
    WEBAPP_LOG_WITH_TIMESTAMPS={env:WEBAPP_LOG_WITH_TIMESTAMPS:0}
    WEBAPP_PORT={env:WEBAPP_PORT:5200}
    PYTHONUNBUFFERED={env:PYTHONUNBUFFERED:1}
whitelist_externals =
    rm
    bash
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt
    -r{toxinidir}/scripts/ci/requirements.txt
commands =
    {toxinidir}/scripts/ci/local/teardown_devserver {toxinidir}/var/run/devserver.pid
    rm -rf {toxinidir}/var
    bash -c 'coverage combine || true'
    bash -c 'coverage erase || true'

    bash -c '{toxinidir}/scripts/ci/local/devserver --procfile {toxinidir}/tests/Procfile --logdir {toxinidir}/var/log --pidfile {toxinidir}/var/devserver.pid --timeout 600 &'
    {toxinidir}/scripts/ci/local/wait_for_service WEBAPP_HOST WEBAPP_PORT
    bash -c 'python -m unittest {posargs} || ({toxinidir}/scripts/ci/local/teardown_devserver {toxinidir}/var/devserver.pid && false)'

    {toxinidir}/scripts/ci/local/teardown_devserver {toxinidir}/var/devserver.pid
    bash -c 'coverage combine || true'
    bash -c 'coverage report || true'
    flake8

[testenv:dev]
passenv = *
commands =
    {toxinidir}/scripts/ci/local/devserver --procfile {toxinidir}/tests/Procfile {posargs}

[testenv:tests-only]
passenv = *
setenv =
    WEBAPP_BASE_URL={env:WEBAPP_BASE_URL}
    WEBAPP_CELERY_BROKER_URL=stubbed
    WEBAPP_CELERY_RESULT_BACKEND=stubbed
commands =
    python -m unittest discover --verbose --buffer

[testenv:ipython]
passenv = *
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt
    -r{toxinidir}/scripts/ci/requirements.txt
    ipython
commands =
    ipython --TerminalInteractiveShell.editing_mode=vi {posargs}


[testenv:bash]
passenv = *
setenv =
    PYTHONUNBUFFERED={env:PYTHONUNBUFFERED:1}
commands =
    bash -c '{posargs}'

[flake8]
max-line-length = 80
exclude =
    *.egg,
    .tox,
    experimental
max-complexity = 10
ignore = E12,E128
